# -- Override the Kubernetes version, which is used to evaluate certain manifests
kubeVersionOverride: ""
# Override APIVersions
# If you want to template helm charts but cannot access k8s API server
# you can set api versions here
apiVersionOverrides:
  # -- String to override apiVersion of cert-manager resources rendered by this helm chart
  certmanager: "" # cert-manager.io/v1
  # -- String to override apiVersion of GKE resources rendered by this helm chart
  cloudgoogle: "" # cloud.google.com/v1
  # -- String to override apiVersion of autoscaling rendered by this helm chart
  autoscaling: "" # autoscaling/v2
  # -- String to override apiVersion of ingresses rendered by this helm chart
  ingress: "" # networking.k8s.io/v1beta1
  # -- String to override apiVersion of pod disruption budgets rendered by this helm chart
  pdb: "" # policy/v1

global:
  # -- Common environment variables to add to all pods directly managed by this chart.
  extraEnv: []

  # -- Common source of environment injections to add to all pods directly managed by this chart.
  # For example to inject values from a Secret, use:
  # extraEnvFrom:
  #   - secretRef:
  #       name: mysecret
  extraEnvFrom: []

s3:
  # -- S3 credentials to be used by the static pages proxy
  # -- The secret name must be the same as the one used in the static pages config
  # -- The secret key must be the same as the one used in the static pages config
  # -- The secret value must be base64 encoded
  app-id: ""
  s3-secret: ""

staticpages:
  nameOverride: ""

  replicaCount: 1
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 5
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80

  image:
    repository: ghcr.io/spechtlabs/staticpages
    pullPolicy: Always
    # Overrides the image tag whose default is the chart appVersion.
    tag: "main"

  # Extra env variables to pass to the StaticPages container
  env: []
  extraEnvFrom: []

  imagePullSecrets: []

  serviceAccount:
    # Specifies whether a service account should be created
    create: true
    # Annotations to add to the service account
    annotations: {}
    # The name of the service account to use.
    # If not set and create is true, a name is generated using the fullname template
    name: ""

  podAnnotations: {}

  podSecurityContext:
    runAsNonRoot: true

  securityContext:
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    runAsNonRoot: true
    runAsUser: 1000
    # capabilities:
    #   drop:
    #   - ALL

  service:
    proxyPort: 8080
    apiPort: 8081

  ingress:
    enabled: false
    className: ""
    annotations: {}
    hosts:
      - host: example.com
        paths:
          - path: /
            pathType: ImplementationSpecific
    tls:
      - secretName: chart-example-local-tls
        hosts:
          - example.com

  resources:
    {}
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    # limits:
    #   cpu: 500m
    #   memory: 128Mi
    # requests:
    #   cpu: 10m
    #   memory: 64Mi

  terminationGracePeriodSeconds: 10

  # -- Additional command line arguments to pass to application controller
  extraArgs: []

  ## Application controller Pod Disruption Budget
  ## Ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/
  pdb:
    # -- Deploy a [PodDisruptionBudget] for the application controller
    enabled: true
    # -- Labels to be added to application controller pdb
    labels: {}
    # -- Annotations to be added to application controller pdb
    annotations: {}
    # -- Number of pods that are available after eviction as number or percentage (eg.: 50%)
    # @default -- `""` (defaults to 0 if not specified)
    minAvailable: 1
    # -- Number of pods that are unavailble after eviction as number or percentage (eg.: 50%).
    ## Has higher precedence over `controller.pdb.minAvailable`
    maxUnavailable: ""

  nodeSelector: {}

  tolerations: []

  affinity: {}

  ## Application controller metrics configuration
  metrics:
    # -- Deploy metrics service
    enabled: false
    service:
      # -- Metrics service annotations
      annotations: {}
      # -- Metrics service labels
      labels: {}
      # -- Metrics service port
      servicePort: 8082
      # -- Metrics service port name
      portName: http-metrics
    serviceMonitor:
      # -- Enable a prometheus ServiceMonitor
      enabled: false
      # -- Prometheus ServiceMonitor interval
      interval: 30s
      # -- Prometheus [RelabelConfigs] to apply to samples before scraping
      relabelings: []
      # -- Prometheus [MetricRelabelConfigs] to apply to samples before ingestion
      metricRelabelings: []
      # -- Prometheus ServiceMonitor selector
      selector:
        {}
        # prometheus: kube-prometheus

      # -- Prometheus ServiceMonitor scheme
      scheme: ""
      # -- Prometheus ServiceMonitor tlsConfig
      tlsConfig: {}
      # -- Prometheus ServiceMonitor namespace
      namespace: "" # "monitoring"
      # -- Prometheus ServiceMonitor labels
      additionalLabels: {}
      # -- Prometheus ServiceMonitor annotations
      annotations: {}
    rules:
      # -- Deploy a PrometheusRule for the application controller
      enabled: false
      # -- PrometheusRule.Spec for the application controller
      # spec:
      #   - alert: UrlShortenerHighVolume
      #     expr: |
      #       irate(urlshortener_shortlink_invocation[1m]) > 5
      #     for: 15m
      #     labels:
      #       severity: critical
      #     annotations:
      #       summary: "[URL Shortener] High rps to shortlink {{`{{$labels.name}}`}}"
      #       description: The urlshortener saw an intense amount of calls to the {{`{{$labels.name}}`}} shortlink over a period of 15 minutes
      # selector:
      #   prometheus: kube-prometheus
      # namespace: monitoring
      # additionalLabels: {}
      # annotations: {}

# Static Pages Config
configs:
  proxy:
    maxIdleConns: 1000
    maxIdleConnsPerHost: 500
    timeout: 30s
    compression: false

  output:
    format: long

  pages: []
  #   - domain: example.com
  #     # Configure the S3 bucket where the website is hosted in
  #     bucket:
  #       region: eu-central-003
  #       url: https://s3.eu-central-003.backblazeb2.com
  #       name: bucket-name
  #       applicationId: ENV(APPLICATION_ID)
  #       secret: ENV(S3_SECRET)
  #     # Configure Proxy URL
  #     proxy:
  #       url: https://f003.backblazeb2.com
  #       path: file/bucket-name
  #       notFound: 404.html
  #       searchPath:
  #         - /index.html
  #         - /index.htm
  #     # Grant access to the repositories to use this domain
  #     git:
  #       provider: github
  #       repository: octocat/octocat.github.io
  #       mainBranch: main
  # #      oidc:
  # #        issuer: https://token.actions.githubusercontent.com
  # #        claimMappings:
  # #          Repository: repository
  # #          Commit: sha
  # #          Branch: ref
  # #          Environment: environment
  #     # Configure preview-build sub domains
  #     preview:
  #       enabled: true
  #       sha: true
  #       environment: false
  #       branch: true
