apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "tka.fullname" . }}
  labels:
    {{- include "tka.labels" . | nindent 4 }}
spec:
  {{- if gt (.Values.replicaCount | int) 1 }}
  {{- fail "TKA does not support multiple replicas due to Tailscale node identity conflicts. Set replicaCount=1." }}
  {{- end }}
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "tka.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- if .Values.secrets.tailscale.create }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- end }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "tka.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "tka.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: {{ include "tka.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - "serve"
            - "--config"
            - "/etc/tka/config.yaml"
          ports:
            - name: health
              containerPort: {{ .Values.tka.health.port }}
              protocol: TCP
          env:
            - name: TS_AUTHKEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "tka.tailscaleSecretName" . }}
                  key: {{ .Values.secrets.tailscale.secretKey }}
          volumeMounts:
            - name: config
              mountPath: /etc/tka
              readOnly: true
            {{- if .Values.persistence.enabled }}
            - name: tsnet-state
              mountPath: {{ .Values.tka.tailscale.stateDir }}
            {{- end }}
          livenessProbe:
            httpGet:
              path: /ready
              port: health
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 5
          readinessProbe:
            httpGet:
              path: /ready
              port: health
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 6
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: config
          configMap:
            name: {{ include "tka.configMapName" . }}
        {{- if .Values.persistence.enabled }}
        - name: tsnet-state
          persistentVolumeClaim:
            claimName: {{ include "tka.pvcName" . }}
        {{- else }}
        - name: tsnet-state
          emptyDir: {}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
