# Default values for tka.
# This is a YAML-formatted file.
# Declare variables to be substituted into your templates.

replicaCount: 1

image:
  repository: ghcr.io/spechtlabs/tka
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 443

resources:
  limits:
    cpu: 500m
    memory: 512Mi
  requests:
    cpu: 100m
    memory: 256Mi

autoscaling:
  # IMPORTANT: Autoscaling is not supported due to Tailscale node identity conflicts.
  # Each Tailscale node must have a unique identity, so TKA can only run with 1 replica.
  enabled: false
  minReplicas: 1
  maxReplicas: 1
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

# TKA Configuration
tka:
  # Tailscale configuration
  tailscale:
    # Hostname for the tsnet node; also used by the CLI to build https://{hostname}.{tailnet}
    hostname: tka
    # API port. Scheme is https if 443, otherwise http
    port: 443
    # Directory for tsnet state (keys, control data)
    stateDir: /var/lib/tka/tsnet-state
    # Tailnet domain, e.g., example.ts.net; used by CLI to compose the base URL
    tailnet: ""
    # Capability name the server requires from Tailscale ACLs
    capName: specht-labs.de/cap/tka

  # Server HTTP timeouts
  server:
    readTimeout: 10s
    readHeaderTimeout: 5s
    writeTimeout: 20s
    idleTimeout: 120s

  # OpenTelemetry configuration
  otel:
    # OTLP gRPC endpoint; if empty, OTel spans/metrics exporters may be disabled
    endpoint: ""
    # Whether to use insecure transport to the OTLP endpoint
    insecure: true

  # Kubernetes operator configuration
  operator:
    # Namespace where SignIn and ServiceAccounts/Bindings are created
    namespace: tka-system
    # Name written into kubeconfig contexts
    clusterName: tka-cluster
    # Prefix for per-user kubeconfig context name
    contextPrefix: tka-context-
    # Prefix for kubeconfig user entry
    userPrefix: tka-user-

  # API behavior configuration
  api:
    # Hint for clients polling async operations (e.g., kubeconfig provisioning)
    retryAfterSeconds: 1

  # CLI output settings (mainly for client configuration)
  output:
    # Color theme for CLI output
    theme: tokyo-night
    # Show detailed output by default when available
    long: true
    # Suppress non-essential output when available
    quiet: false
    # Apply markdown formatting fixes to generated documentation
    markdownlintFix: false

  # Enable debug logging
  debug: false

# Secrets configuration
secrets:
  # Tailscale auth token configuration
  tailscale:
    # Create a secret for the Tailscale auth token
    create: true
    # Name of the secret containing the auth token
    secretName: tka-tailscale
    # Key within the secret containing the auth token
    secretKey: TS_AUTHKEY
    # Value of the auth token (only used if create is true)
    # It's recommended to override this value or use an existing secret
    authKey: ""
    # Annotations for the secret
    annotations: {}

# Persistence configuration
persistence:
  # Enable persistence for Tailscale state
  enabled: true
  # Storage class for the persistent volume
  storageClass: ""
  # Access mode for the persistent volume
  accessMode: ReadWriteOnce
  # Size of the persistent volume
  size: 1Gi
  # Annotations for the persistent volume claim
  annotations: {}

# ServiceMonitor for Prometheus monitoring
serviceMonitor:
  enabled: false
  # Additional labels for the ServiceMonitor
  labels: {}
  # Scrape interval
  interval: 30s
  # Scrape timeout
  scrapeTimeout: 10s
  # Path to scrape metrics from
  path: /metrics

# PrometheusRule for alerting
prometheusRule:
  enabled: false
  # Additional labels for the PrometheusRule
  labels: {}
  # Privileged role login alerts (configurable role)
  privilegedRoleAlert:
    enabled: false
    clusterRole: cluster-admin
    severity: warning
    duration: 0s
    maxActiveSessions: 2
    runbookUrl: ""
  # Server down alerts
  serverDownAlert:
    enabled: false
    severity: critical
    duration: 1m
  # Error rate alerts
  errorRateAlert:
    enabled: false
    severity: warning
    threshold: 0.1
    duration: 2m
  # Authentication failure alerts
  forbiddenRateAlert:
    enabled: false
    severity: warning
    threshold: 0.2
    duration: 5m
  # Custom alerting rules (optional)
  customRules: []

# RBAC configuration
rbac:
  # Create RBAC resources
  create: true
  # Additional annotations for ClusterRole and ClusterRoleBinding
  annotations: {}

# Pod disruption budget
# NOTE: Not recommended for TKA since it runs as a single replica due to Tailscale constraints
podDisruptionBudget:
  enabled: false
  minAvailable: 1
  # maxUnavailable: 1

# Network policies
networkPolicy:
  enabled: false
  # Ingress rules
  ingress: []
  # Egress rules
  egress: []
